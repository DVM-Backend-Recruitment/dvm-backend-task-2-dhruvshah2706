"""
Django settings for movie project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file,  see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values,  see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv(dotenv_path=".env.dev")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)j2^fdl1y9q-=0!4j@^ry44do$2@fhh-v3-ur# ajofcv$@ezm1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0',  'localhost',  '127.0.0.1']

# Application definition
INSTALLED_APPS = [
    'Food.apps.FoodConfig', 
    'Bookings.apps.BookingsConfig', 
    'Movies.apps.MoviesConfig', 
    'Theaters.apps.TheatersConfig', 
    'Transactions.apps.TransactionsConfig', 
    'django.contrib.sites', 
    'allauth', 
    'allauth.account', 
    'allauth.socialaccount', 
    'allauth.socialaccount.providers.google', 
    'users.apps.UsersConfig', 
    'django.contrib.admin', 
    'django.contrib.auth', 
    'django.contrib.contenttypes', 
    'django.contrib.sessions', 
    'django.contrib.messages', 
    'django.contrib.staticfiles', 
]

MIDDLEWARE = [
    'allauth.account.middleware.AccountMiddleware', 
    'django.middleware.security.SecurityMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware', 
    'django.middleware.common.CommonMiddleware', 
    'django.middleware.csrf.CsrfViewMiddleware', 
    'django.contrib.auth.middleware.AuthenticationMiddleware', 
    'django.contrib.messages.middleware.MessageMiddleware', 
    'django.middleware.clickjacking.XFrameOptionsMiddleware', 
]

ROOT_URLCONF = 'movie.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', 
        'DIRS': [BASE_DIR /'templates'], 
        'APP_DIRS': True, 
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', 
                'django.template.context_processors.request', 
                'django.contrib.auth.context_processors.auth', 
                'django.contrib.messages.context_processors.messages', 
            ], 
        }, 
    }, 
]

WSGI_APPLICATION = 'movie.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/# databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE",  "django.db.backends.sqlite3"), 
        "NAME": os.environ.get("SQL_DATABASE",  BASE_DIR / "db.sqlite3"), 
        "USER": os.environ.get("SQL_USER",  "user"), 
        "PASSWORD": os.environ.get("SQL_PASSWORD",  "password"), 
        "HOST": os.environ.get("SQL_HOST",  "localhost"), 
        "PORT": os.environ.get("SQL_PORT",  "5432"), 
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/# auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', 
    }, 
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', 
    }, 
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', 
    }, 
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', 
    }, 
]

# for google sign in

SITE_ID = 2
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',   # Djangoâ€™s default authentication
    'allauth.account.auth_backends.AuthenticationBackend',   # Required for allauth
]

# Configure the social account providers
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile', 
            'email', 
        ], 
        'APP': {
            'client_id': os.environ.get('CLIENT_ID'), 
            'secret': os.environ.get('CLIENT_SECRET'), 
        }, 
        'AUTH_PARAMS': {
            'access_type': 'online', 
        }, 
        'METHOD': 'oauth2', 
        'VERIFIED_EMAIL': True, 
        #  'CLIENT_ID': os.environ.get('CLIENT_ID'), 
        #  'CLIENT_SECRET': os.environ.get('CLIENT_SECRET'), 
        'OAUTH_PKCE_ENABLED': True, 
    }
}


ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "optional"  # Adjust based on your requirements
LOGIN_REDIRECT_URL = '/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'


# for sending mails
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'dhruvshah2706@gmail.com'
EMAIL_HOST_PASSWORD = 'khxeesnplzplfwao'
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
#  EMAIL_SSL_CERTFILE = certifi.where()   

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS,  JavaScript,  Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/# default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SOCIAL_AUTH_LOGIN_URL = '/login/'

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"